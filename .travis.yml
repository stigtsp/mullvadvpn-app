sudo: false
env:
  global:
    - MACOSX_DEPLOYMENT_TARGET="10.7"

matrix:
  include:
    - language: node_js
      node_js: '8'
      cache: yarn

      install: &node_install
        - yarn install

        # FIXME: Flow throws error for optional dependencies
        # missing from node_modules on unsupported platforms
        # see: https://github.com/facebook/flow/issues/4171
        - OPTIONAL_DEPS=('nseventmonitor' 'windows-security');
          for MODULE in ${OPTIONAL_DEPS[@]}; do
            FILE="node_modules/$MODULE/index.js";
            if [ ! -f $FILE ]; then
              echo "Installing a stub for $MODULE..";
              mkdir -p `dirname $FILE`;
              echo "module.exports = {};" > $FILE;
            fi
          done
      before_script: &node_before_script
        - export DISPLAY=:99.0; sh -e /etc/init.d/xvfb start
      script: &node_script
        - yarn run lint
        - yarn run flow
        - yarn test

    - language: node_js
      node_js: '7'
      cache: yarn
      install: *node_install
      before_script: *node_before_script
      script: *node_script


    # Backend macOS
    - language: rust
      rust: stable
      os: osx
      cache: cargo

      before_script: &rust_before_script
        - export PATH=$HOME/.cargo/bin:$HOME/.local/bin:$PATH
        - env
      script: &rust_script
        - cargo build --verbose
        - cargo test --verbose

    # Backend Linux
    - language: rust
      rust: nightly
      os: linux
      cache: cargo
      before_script: *rust_before_script
      script:
        - cargo build --verbose
        - cargo test --verbose
        # Format only on nightly, since that is where rustfmt-nightly compiles
        - export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib:$LD_LIBRARY_PATH
        - ./format.sh --write-mode=diff;

    - language: rust
      rust: beta
      os: linux
      cache: cargo
      before_script: *rust_before_script
      script: *rust_script

    - language: rust
      rust: stable
      os: linux
      cache: cargo
      before_script: *rust_before_script
      script: *rust_script


notifications:
  email:
    on_success: never
    on_failure: never
